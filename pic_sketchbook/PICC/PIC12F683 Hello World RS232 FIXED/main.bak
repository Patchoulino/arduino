#include <12F683.h>
#device adc=10

#FUSES NOWDT                    //No Watch Dog Timer
#FUSES INTRC_IO                 //Internal RC Osc, no CLKOUT
#FUSES NOCPD                    //No EE protection
#FUSES NOPROTECT                //Code not protected from reading
#FUSES NOMCLR                   //Master Clear pin used for I/O
#FUSES PUT                      //Power Up Timer
#FUSES NOBROWNOUT               //No brownout reset
#FUSES NOIESO                   //Internal External Switch Over mode disabled
#FUSES NOFCMEN                  //Fail-safe clock monitor disabled

#use delay(int=8000000)
#use rs232(baud=9600,parity=N,xmit=PIN_A0,rcv=PIN_A1,bits=8)

void main()
{

   setup_oscillator(OSC_8MHZ);

   setup_adc_ports(sAN3|VSS_VDD);
   setup_adc(ADC_CLOCK_DIV_2);
   setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1);
   setup_timer_1(T1_DISABLED);
   //setup_timer_2(T2_DIV_BY_4,99,1);  //5KHz
   setup_timer_2(T2_DIV_BY_16,255,1);  //500Hz
   //setup_timer_2(T2_DIV_BY_4,255,1);  //2KHz
   //setup_timer_2(T2_DIV_BY_4,127,1);  //4KHz
   setup_ccp1(CCP_PWM);
   set_pwm1_duty(512);
   setup_comparator(NC_NC);
   
   set_adc_channel(3);
   delay_us(10);
   
   const long c = 64511;
   long long_integer;
   float float_var;
   
   int var = 1;
   int x, y;

    while(true)
    {
      long_integer = read_adc();
      set_pwm1_duty(long_integer);
      
      putc(10);
      putc(13);

      x = (var - 1) / 3;         //la tecla se transforma en coordenadas para la matriz
         
      if(var >= 1 && var <= 3)   y = var - 1;
      if(var >= 4 && var <= 6)   y = var - 4;
      if(var >= 7 && var <= 9)   y = var - 7;
               
      fprintf(1,"Var %d || (%d,%d)",var,x,y);
      
      var++;
      if(var == 10)  var = 1;
      
      delay_ms(100);
    }
}

/*

#include <12F683.h>
#device adc=10

#FUSES NOWDT                    //No Watch Dog Timer
#FUSES INTRC_IO                 //Internal RC Osc, no CLKOUT
#FUSES NOCPD                    //No EE protection
#FUSES NOPROTECT                //Code not protected from reading
#FUSES NOMCLR                   //Master Clear pin used for I/O
#FUSES PUT                      //Power Up Timer
#FUSES NOBROWNOUT               //No brownout reset
#FUSES NOIESO                   //Internal External Switch Over mode disabled
#FUSES NOFCMEN                  //Fail-safe clock monitor disabled

#use delay(int=8000000)
#use rs232(baud=9600,parity=N,xmit=PIN_A0,rcv=PIN_A1,bits=8)

void main()
{

   setup_oscillator(OSC_8MHZ);

   setup_adc_ports(sAN3|VSS_VDD);
   setup_adc(ADC_CLOCK_DIV_2);
   setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1);
   setup_timer_1(T1_DISABLED);
   //setup_timer_2(T2_DIV_BY_4,99,1);  //5KHz
   setup_timer_2(T2_DIV_BY_16,255,1);  //500Hz
   //setup_timer_2(T2_DIV_BY_4,255,1);  //2KHz
   //setup_timer_2(T2_DIV_BY_4,127,1);  //4KHz
   setup_ccp1(CCP_PWM);
   set_pwm1_duty(512);
   setup_comparator(NC_NC);
   
   set_adc_channel(3);
   delay_us(10);
   
   const long c = 64511;
   long long_integer;
   float float_var;

    while(true)
    {
      long_integer = read_adc();
      set_pwm1_duty(long_integer);
      
      putc(10);
      putc(13);
      
      if(long_integer > 512)
      {     //CCS printf has a bug printing Longs
         //float_var = (long_integer-c) * 0.004887585; // (n/1023)*5 doesn't work REAL LINE
         //fprintf(1,"long = %lu || float = %f",long_integer-c,float_var); //REAL LINE
         float_var = long_integer * 0.004887585; //SIMULATION
         fprintf(1,"long = %lu || float = %f",long_integer,float_var); //SIMULATION
      }
      else
      {
         float_var = long_integer * 0.004887585; // (n/1023)*5 doesn't work
         fprintf(1,"long = %lu || float = %f",long_integer,float_var);
      }
      
      delay_ms(100);
    }
}


*/
